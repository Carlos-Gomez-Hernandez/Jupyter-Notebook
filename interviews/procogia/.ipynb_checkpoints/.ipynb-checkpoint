{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "#OPEN FILES AND IMPORT LIBRARIES\n",
    "import pandas as pd\n",
    "import re\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "df0 = pd.read_csv(\"green_tripdata_2018-12.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(685373, 19)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check structure\n",
    "df0.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VendorID</th>\n",
       "      <th>lpep_pickup_datetime</th>\n",
       "      <th>lpep_dropoff_datetime</th>\n",
       "      <th>store_and_fwd_flag</th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>ehail_fee</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>trip_type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2</td>\n",
       "      <td>2018-12-01 00:23:25</td>\n",
       "      <td>2018-12-01 00:24:47</td>\n",
       "      <td>N</td>\n",
       "      <td>1</td>\n",
       "      <td>193</td>\n",
       "      <td>193</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.3</td>\n",
       "      <td>4.30</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>2018-11-30 23:58:31</td>\n",
       "      <td>2018-12-01 00:21:53</td>\n",
       "      <td>N</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>82</td>\n",
       "      <td>2</td>\n",
       "      <td>5.75</td>\n",
       "      <td>21.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.3</td>\n",
       "      <td>22.30</td>\n",
       "      <td>2</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2018-12-01 00:21:03</td>\n",
       "      <td>2018-12-01 00:30:15</td>\n",
       "      <td>N</td>\n",
       "      <td>1</td>\n",
       "      <td>225</td>\n",
       "      <td>225</td>\n",
       "      <td>1</td>\n",
       "      <td>1.55</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.86</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.3</td>\n",
       "      <td>11.16</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>2018-12-01 00:15:56</td>\n",
       "      <td>2018-12-01 00:23:26</td>\n",
       "      <td>N</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>236</td>\n",
       "      <td>2</td>\n",
       "      <td>1.32</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.3</td>\n",
       "      <td>8.30</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2018-12-01 00:28:32</td>\n",
       "      <td>2018-12-01 00:30:33</td>\n",
       "      <td>N</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>2</td>\n",
       "      <td>0.68</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.5</td>\n",
       "      <td>1.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.3</td>\n",
       "      <td>6.36</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   VendorID lpep_pickup_datetime lpep_dropoff_datetime store_and_fwd_flag  \\\n",
       "0         2  2018-12-01 00:23:25   2018-12-01 00:24:47                  N   \n",
       "1         2  2018-11-30 23:58:31   2018-12-01 00:21:53                  N   \n",
       "2         2  2018-12-01 00:21:03   2018-12-01 00:30:15                  N   \n",
       "3         2  2018-12-01 00:15:56   2018-12-01 00:23:26                  N   \n",
       "4         2  2018-12-01 00:28:32   2018-12-01 00:30:33                  N   \n",
       "\n",
       "   RatecodeID  PULocationID  DOLocationID  passenger_count  trip_distance  \\\n",
       "0           1           193           193                1           0.00   \n",
       "1           1            80            82                2           5.75   \n",
       "2           1           225           225                1           1.55   \n",
       "3           1            75           236                2           1.32   \n",
       "4           1            75            75                2           0.68   \n",
       "\n",
       "   fare_amount  extra  mta_tax  tip_amount  tolls_amount  ehail_fee  \\\n",
       "0          3.0    0.5      0.5        0.00           0.0        NaN   \n",
       "1         21.0    0.5      0.5        0.00           0.0        NaN   \n",
       "2          8.0    0.5      0.5        1.86           0.0        NaN   \n",
       "3          7.0    0.5      0.5        0.00           0.0        NaN   \n",
       "4          4.0    0.5      0.5        1.06           0.0        NaN   \n",
       "\n",
       "   improvement_surcharge  total_amount  payment_type  trip_type  \n",
       "0                    0.3          4.30             2        1.0  \n",
       "1                    0.3         22.30             2        1.0  \n",
       "2                    0.3         11.16             1        1.0  \n",
       "3                    0.3          8.30             1        1.0  \n",
       "4                    0.3          6.36             1        1.0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display first lines\n",
    "df0.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "VendorID                   int64\n",
       "lpep_pickup_datetime      object\n",
       "lpep_dropoff_datetime     object\n",
       "store_and_fwd_flag        object\n",
       "RatecodeID                 int64\n",
       "PULocationID               int64\n",
       "DOLocationID               int64\n",
       "passenger_count            int64\n",
       "trip_distance            float64\n",
       "fare_amount              float64\n",
       "extra                    float64\n",
       "mta_tax                  float64\n",
       "tip_amount               float64\n",
       "tolls_amount             float64\n",
       "ehail_fee                float64\n",
       "improvement_surcharge    float64\n",
       "total_amount             float64\n",
       "payment_type               int64\n",
       "trip_type                float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Check that the data types are correct\n",
    "'''Agregation vectors should be floats or ints not objects, if object then there may be bad characters'''\n",
    "df0.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0|VendorID\n",
      "1|lpep_pickup_datetime\n",
      "2|lpep_dropoff_datetime\n",
      "3|store_and_fwd_flag\n",
      "4|RatecodeID\n",
      "5|PULocationID\n",
      "6|DOLocationID\n",
      "7|passenger_count\n",
      "8|trip_distance\n",
      "9|fare_amount\n",
      "10|extra\n",
      "11|mta_tax\n",
      "12|tip_amount\n",
      "13|tolls_amount\n",
      "14|ehail_fee\n",
      "15|improvement_surcharge\n",
      "16|total_amount\n",
      "17|payment_type\n",
      "18|trip_type\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "#Name of columns and index of each column:\n",
    "''' This function provides a clean output of columns and indexes'''\n",
    "def col(dfs):\n",
    "    list_col = list(dfs.columns.values)\n",
    "    list_number_col = []\n",
    "    zip_list = []\n",
    "    for i in range(0, len(list_col)):\n",
    "        list_number_col.append(i)\n",
    "    zip_list = list(zip(list_number_col,list_col))\n",
    "    #[(0, 'event_date'), (1, 'id'), (2, 'dimension_1')]\n",
    "    for i in zip_list:\n",
    "        a = i[0]\n",
    "        b = i[1]\n",
    "        print(str(a) + \"|\" +  b)\n",
    "print(col(df0))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TOP 3 VALUES OF DOLocationID ['2019-03-11 22:34:23', '2019-01-28 05:44:20', '2019-01-14 21:25:36']\n",
      "BOT VALUE OF DOLocationID ['2008-12-31 23:43:29']\n"
     ]
    }
   ],
   "source": [
    "#Check unique values of columns\n",
    "'''Use this line to have a close look at the data'''\n",
    "#set(list(df0.iloc[:,17]))\n",
    "#sorted(set(list(df0.iloc[:,2])), reverse=True)\n",
    "\n",
    "check = sorted(set(list(df0.iloc[:,2])), reverse=True)\n",
    "\n",
    "print(\"TOP 3 VALUES OF DOLocationID\",check[0:3])\n",
    "print(\"BOT VALUE OF DOLocationID\", check[-1:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "'''Vectors Analysis:\n",
    "---------------------\n",
    "- VendorID is the cab company.\n",
    "        1 = Creative Mobile Technologies, LLC; \n",
    "        2 = VeriFone Inc.\n",
    "- Pickup and dropoff vectors have to be stripped. ['2008-12-31 23:43:29', .... '2019-03-11 22:34:23'] Ten years worth of trips.\n",
    "- RateCodeID {1, 2, 3, 4, 5, 6, 99} values need to be relabled matching the data dictionary. There is a 99 value not defined.\n",
    "        1 = Standard rate\n",
    "        2 = JFK\n",
    "        3 = Newark\n",
    "        4 = Nassau or Westchester\n",
    "        5 = Negotiated fare\n",
    "        6 = Group ride\n",
    "- Passanger Count: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}\n",
    "- Trip Distance {0.0, 0.01, , .. 33.64 ...105.13} in miles.\n",
    "- Payment Type: {1, 2, 3, 4, 5} values need to be relabled matching the data dictionary. Value 6 is missing.\n",
    "        1 = Credit card\n",
    "        2 = Cash\n",
    "        3 = No charge\n",
    "        4 = Dispute\n",
    "        5 = Unknown\n",
    "        6 = Voided trip\n",
    "- Trip type: {1,2}\n",
    "        1 = Street-hail\n",
    "        2 = Dispatch\n",
    "\n",
    "\n",
    "Money Related Vectors:\n",
    "---------------------\n",
    "- Fare Amount: {0.0,....,495.0, 500.0} assumed all the same currency.\n",
    "- Extra: [4.5, 1.0, 0.72, 0.5, 0.0, -0.5, -1.0, -4.5] This conflicts with the data dictionary.\n",
    "- MTA Tax : [0.5, 0.08, 0.0, -0.5] in dollars.\n",
    "- Tip Amount: [-8.88,-8.0,-1.26, ....... 300.0] There are negative tips.\n",
    "- Tolls Amount: [-11.52,0.0, .... 59.76, 95.76] There are negative tolls.\n",
    "- Ehail Fee: [...]\n",
    "- Improvement Surcharge: [...]\n",
    "- Total Amount: metric\n",
    "\n",
    "Less Usefull Vectors:\n",
    "--------------------\n",
    "May not be too relevant: Store_and_fwd_flag {Y,N}\n",
    "Location vectors are missing name dimension table - PULocationID and DOLocationID  {1,2,3,4 .... , 265}.\n",
    "Location vectors contain too many values for a simple agregations.\n",
    "\n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#TEST DESIGNATED AREA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RatecodeID</th>\n",
       "      <th>PULocationID</th>\n",
       "      <th>DOLocationID</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>trip_distance</th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>extra</th>\n",
       "      <th>mta_tax</th>\n",
       "      <th>tip_amount</th>\n",
       "      <th>tolls_amount</th>\n",
       "      <th>ehail_fee</th>\n",
       "      <th>improvement_surcharge</th>\n",
       "      <th>total_amount</th>\n",
       "      <th>payment_type</th>\n",
       "      <th>trip_type</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VendorID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.089262</td>\n",
       "      <td>110.198398</td>\n",
       "      <td>128.403983</td>\n",
       "      <td>1.146992</td>\n",
       "      <td>3.090868</td>\n",
       "      <td>13.042764</td>\n",
       "      <td>0.331109</td>\n",
       "      <td>0.489157</td>\n",
       "      <td>1.320538</td>\n",
       "      <td>0.159751</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.293770</td>\n",
       "      <td>15.637090</td>\n",
       "      <td>1.488996</td>\n",
       "      <td>1.019389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.300430</td>\n",
       "      <td>110.328903</td>\n",
       "      <td>128.075217</td>\n",
       "      <td>1.349826</td>\n",
       "      <td>3.498454</td>\n",
       "      <td>14.311278</td>\n",
       "      <td>0.304246</td>\n",
       "      <td>0.488862</td>\n",
       "      <td>0.877771</td>\n",
       "      <td>0.245640</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.275565</td>\n",
       "      <td>16.532044</td>\n",
       "      <td>1.401874</td>\n",
       "      <td>1.073989</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          RatecodeID  PULocationID  DOLocationID  passenger_count  \\\n",
       "VendorID                                                            \n",
       "1           1.089262    110.198398    128.403983         1.146992   \n",
       "2           1.300430    110.328903    128.075217         1.349826   \n",
       "\n",
       "          trip_distance  fare_amount     extra   mta_tax  tip_amount  \\\n",
       "VendorID                                                               \n",
       "1              3.090868    13.042764  0.331109  0.489157    1.320538   \n",
       "2              3.498454    14.311278  0.304246  0.488862    0.877771   \n",
       "\n",
       "          tolls_amount  ehail_fee  improvement_surcharge  total_amount  \\\n",
       "VendorID                                                                 \n",
       "1             0.159751        NaN               0.293770     15.637090   \n",
       "2             0.245640        NaN               0.275565     16.532044   \n",
       "\n",
       "          payment_type  trip_type  \n",
       "VendorID                           \n",
       "1             1.488996   1.019389  \n",
       "2             1.401874   1.073989  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#TEST POWER BI MEAN VISUALIZATION\n",
    "df0.groupby(['VendorID']).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>VendorID</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>trip_type</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>640290</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2.0</th>\n",
       "      <td>45081</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           VendorID\n",
       "trip_type          \n",
       "1.0          640290\n",
       "2.0           45081"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#TEST POWER BI DISPATCH COUNT VISUALIZATION\n",
    "df1 = df0.iloc[:,[0,18]]\n",
    "df1.groupby(['trip_type']).count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
